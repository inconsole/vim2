"bundle

set nocompatible
filetype off
if has("win32")
    set rtp+=$HOME/.vim/bundle/vundle/
else
    set rtp+=~/.vim/bundle/vundle/
endif
call vundle#rc()

" ################### 插件管理 ###################

" 使用Vundle来管理插件
" vim plugin bundle control, command model
"     :BundleInstall     install 安装配置的插件
"     :BundleInstall!    update  更新
"     :BundleClean       remove plugin not in list 删除本地无用插件
Bundle 'gmarik/vundle'


" ###### 主题 molokai 和 Solarized
Bundle 'tomasr/molokai'
let g:molokai_original=1
Bundle 'altercation/vim-colors-solarized'
let g:solarized_termcolors=256
let g:solarized_termtrans=1
let g:solarized_contrast="normal"
let g:solarized_visibility="normal"
" 主题使用
set background=dark          
set t_Co=256
colorscheme molokai
"colorscheme solarized

"#####自动根据当前打开文件切换工作目录
Bundle 'airblade/vim-rooter'
let g:rooter_disable_map=1


" 多语言语法检查
Bundle 'scrooloose/syntastic'
let g:syntastic_error_symbol='>>'
let g:syntastic_warning_symbol='>'
let g:syntastic_check_on_open=1
let g:syntastic_check_on_wq=0
let g:syntastic_enable_highlighting=1
let g:syntastic_python_checkers=['pyflakes', 'pep8'] " 使用pyflakes,速度比pylint快
let g:syntastic_python_pep8_args='--ignore=E501,E225'

"####状态栏美观
Plugin 'bling/vim-airline'
"这个是安装字体后 必须设置此项"
"let g:airline_powerline_fonts=1
"打开tabline功能,方便查看Buffer和切换，这个功能比较不错"
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#buffer_nr_show=1
"设置切换Buffer快捷键"
nnoremap <C-N> :bn<CR>
nnoremap <C-P> :bp<CR>
"关闭状态显示空白符号计数,这个对我用处不大"
let g:airline#extensions#whitespace#enabled=0
let g:airline#extensions#whitespace#symbol='!'

"####自动补全当前或者字典文件
Bundle 'AutoComplPop'

" 自动补全html/xml标签
Bundle 'docunext/closetag.vim'
let g:closetag_html_style=1

" 快速注释
Bundle 'scrooloose/nerdcommenter'
let g:NERDSpaceDelims=1

Bundle 'vim-scripts/matchit.zip'
" 显示marks - 方便自己进行标记和跳转
" m[a-zA-Z] add mark
" '[a-zA-Z] go to mark
" m<Space>  del all marks
Bundle "kshenoy/vim-signature"

"目录导航
Bundle 'scrooloose/nerdtree'
map <leader>n :NERDTreeToggle<CR>
let NERDTreeHighlightCursorline=1
let NERDTreeIgnore=[ '\.pyc$', '\.pyo$', '\.obj$', '\.o$', '\.so$', '\.egg$', '^\.git$', '^\.svn$', '^\.hg$' ]
"close vim if the only window left open is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | end
" s/v 分屏打开文件
let g:NERDTreeMapOpenSplit = 's'
let g:NERDTreeMapOpenVSplit = 'v'

Bundle 'jistr/vim-nerdtree-tabs'
map <Leader>n <plug>NERDTreeTabsToggle<CR>
" 关闭同步
let g:nerdtree_tabs_synchronize_view=0
let g:nerdtree_tabs_synchronize_focus=0
" 自动开启nerdtree
"let g:nerdtree_tabs_open_on_console_startup=1

" 标签导航
Bundle 'majutsushi/tagbar'
nmap <F9> :TagbarToggle<CR>
let g:tagbar_autofocus = 1
" for ruby
let g:tagbar_type_ruby = {
    \ 'kinds' : [
        \ 'm:modules',
        \ 'c:classes',
        \ 'd:describes',
        \ 'C:contexts',
        \ 'f:methods',
        \ 'F:singleton methods'
    \ ]
\ }



" ###### Python #########
" python fly check, 弥补syntastic只能打开和保存才检查语法的不足
Bundle 'kevinw/pyflakes-vim'
let g:pyflakes_use_quickfix = 0

" for python.vim syntax highlight
Bundle 'hdima/python-syntax'
let python_highlight_all = 1


" ###### HTML/JS/JQUERY/CSS #########
" for javascript  注意: syntax这个插件要放前面
Bundle 'jelera/vim-javascript-syntax'
Bundle "pangloss/vim-javascript"
let g:html_indent_inctags = "html,body,head,tbody"
let g:html_indent_script1 = "inc"
let g:html_indent_style1 = "inc"

" for jquery
Bundle 'nono/jquery.vim'

" html complete
" Bundle "mattn/emmet-vim"

" for jinja2
Bundle 'Glench/Vim-Jinja2-Syntax'

" for css color
" not work in iterm2 which termianl selection is not xterm-256
Bundle 'ap/vim-css-color'

" markdown
Plugin 'iamcco/markdown-preview.vim'
let g:mkdp_path_to_chrome = "open -a Safari"

" vim-go
Plugin 'fatih/vim-go'
